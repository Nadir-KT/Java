package com.java.JDBC;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

import com.mysql.cj.jdbc.Driver;

public class CRUD {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String name="Java";
		int age=25;
		String product="JDBC";
		try {
			//Class.forName("com.mysql.cj.jdbc.Driver");//1. Load JDBC driver
			DriverManager.registerDriver(new Driver());
			//2. Define database URL //String url="jdbc:mysql://host_address:port/DataBaseName"
			String url="jdbc:mysql://localhost:3306/customer_db";
			//3. Establish a connection to the database URL using DriverManager.//getConnection(String url, String user, String password)
			Connection con = DriverManager.getConnection(url, "root", "admin");
			//4. Create the Statement object for sending SQL statements to the database. 
			//Syntax1: prepareStatement("insert into TableName(columns),values('"+values+"')")
			//PreparedStatement stmt=con.prepareStatement("insert into customer_table(c_name,c_age,c_product)values('"+name+"','"+age+"','"+product+"')");
			//Syntax2: prepareStatement("insert into TableName(columns),values(?,?,?)");//setString/setInt(int parameterIndex, x)
			/* PreparedStatement stmt=con.prepareStatement("insert into customer_table(c_name,c_age,c_product)values(?,?,?)");
			stmt.setString(1, "WD");//setString(int parameterIndex, String x)
			stmt.setInt(2, 40);//setInt(int parameterIndex, int x)
			stmt.setString(3, "SSD");//setString(int parameterIndex, String x) */
			//SQL statements without parameters are normally executed using Statement objects. 
			//If the same SQL statement is executed many times, it may be more efficient to use a PreparedStatement object.
			//Statement stmt=con.createStatement();
			/* String sql = "CREATE TABLE student " +
	                   "(Student_id INTEGER not NULL, " +
	                   " Student_name VARCHAR(255), " + 
	                   " Student_place VARCHAR(255), " + 
	                   " course VARCHAR(255), " + 
	                   " contact_num INTEGER, " + 
	                   " PRIMARY KEY ( Student_id ))"; */
			String query="create table student(Student_id INTEGER not NULL primary key,Student_name varchar(45),Student_place varchar(45),course varchar(45),contact_num INTEGER,dob date)";
			PreparedStatement stmt1=con.prepareStatement("insert into customer_table(c_name,c_age,c_product)values('"+name+"','"+age+"','"+product+"')");
			//5. Executes the SQL statement in this PreparedStatement object //PreparedStatementObject.executeUpdate()
			int i=stmt1.executeUpdate(query);
			if(i>0) {
				System.out.println("Sucessfull");
			} else {
				System.out.println("Failed");
			}
			//Executes the SQL statement, which returns a single ResultSet object. 
			ResultSet rs=stmt1.executeQuery("select * from student");
			while(rs.next())//Get column from each next row to Retrieve the value of the designated column of the ResultSet object 
				{
					System.out.print(rs.getInt(1)+" ");//getInt(int columnIndex)
					System.out.print(rs.getString(2)+" ");//getString(int columnIndex)
					System.out.print(rs.getString(3)+" ");
					System.out.print(rs.getString(4)+" ");
					System.out.print(rs.getInt(5));
					System.out.println();
				}
			con.close();//6.Close the connection with the specific database. 
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
	}

}
//https://www.tutorialspoint.com/jdbc/jdbc-create-tables.htm
//https://www.tutorialspoint.com/how-to-create-a-table-in-a-database-using-jdbc-api
//https://www.tutorialspoint.com/java_mysql/java_mysql_create_tables.htm
//https://www.tutorialspoint.com/java_mysql/java_mysql_select_database.htm
//https://www.tutorialspoint.com/java_mysql/java_mysql_select_records.htm
//https://www.geeksforgeeks.org/java-database-connectivity-with-mysql/
//https://www.includehelp.com/java/create-a-table-using-jdbc-in-java.aspx
//https://stackoverflow.com/questions/19016363/java-creating-tables-in-mysql-database
//https://www.c-sharpcorner.com/UploadFile/e68763/creating-table-and-retrieving-data-from-mysql-in-jdbc/
//https://www.tutorialspoint.com/how-to-create-a-database-in-mysql-using-a-jdbc-api
//https://www3.ntu.edu.sg/home/ehchua/programming/java/jdbc_basic.html

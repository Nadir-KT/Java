package com.java.MultiThreading;

public class InterThreadCom {
	double balance=5000;
	synchronized public void withdraw(double amt)
	{
		System.out.println("Going to withdraw");
		if(amt>=balance) {
			System.out.println("Less balance please wait for depositing");
			try {
				wait();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		balance-=amt;
		System.out.println("withdraw completed");
		System.out.println("Current Balance = "+balance);
	}
	
	synchronized void deposit(double dep) {
		System.out.println("Depositing the amount");
		balance+=dep;
		System.out.println("Depositing completed");
		notify();
	}
	
	public static void main(String[] args) {
		InterThreadCom i1=new InterThreadCom();
		Thread t1= new Thread() {
			public void run() {
				i1.withdraw(7000);
			}
		};
		Thread t2= new Thread() {
			public void run() {
				i1.deposit(5000);
			}
		};
		t1.start();
		t2.start();
	}
}

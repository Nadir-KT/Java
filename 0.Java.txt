IDE: Eclipse/NetBeans/IntelliJ
CODING COMPLETED: LOOPS, STRING, ARRAY, HTML,
CODING REMAINING: COLLECTIONS, SWINGS[Finance App], MySQL, CSS[+SocialMedia], JS, JDBC[+ECom], SERVLETS, HIBERNATE, ECom-BOOKING, TRACKING SYSTEM
Module-1 65-65, Rewise=59to65
--------
Setup
Datatypes
Module-2 23-7, Rewise=8to12
--------
String
Arrays
Module-3 42
--------
Applets
Swings
Collection
Exceptions
Multi threading
Database technologies
---------------------
MySQL - 18
Front-end technologies
----------------------
HTML-11-11, Rewise=1
CSS-23-15
JS-31-27
JQuery, Bootstrap
Web Applications
----------------
JDBC-5
Servlets-28
JSP
JAVA Frameworks
---------------
Hibernate Module-1 8
Hibernate Module-2 6
Spring MVC Module-1 12
Spring MVC Module-2 6
Spring Boot Module-1 7
Spring Boot Module-2 12

Features of Java
----------------
Simple: Pointers, Call by reference, Operator overloading
Object Oriented: Class, Object, Inheritance, Abstraction, Polymorphism, Encapsulation
Secure: Platform independent
Portable
High performance: JVM
Architectural Neutral: Same data type memory size on 32/64bit systems
Multithreading

JDK - Java Development Kit
JRE - Java Runtime Environment
java -version
Environment Variable
--------------------
Search for Edit the system environment -> Environment Variable
User variables -> New -> Variable name: JAVA_HOME -> Variable value: C:\Program Files\Java\jdk-1.8 -> OK
User variables -> Path -> Edit -> New -> %JAVA_HOME%\bin -> OK

F:
cd Java
javac Abc.java // File_name.java (or) Class_name.java, Compilation Syntax: javac Class_name.java
java Abc // To run the code, Syntax: java class_name

Eclipse
-------
File->New->Project...->Java Project
Use an executiin environment JRE: JavaSE - 1.8
Open Prespective->No
Package->Folder->Class
Autofill=Ctrl+Space

In software design, the Java Native Interface (JNI) is a foreign function interface programming framework that enables Java code running in a Java virtual machine (JVM) to call and be called by[1] native applications (programs specific to a hardware and operating system platform) and libraries written in other languages such as C, C++ and assembly.
JNI enables programmers to write native methods to handle situations when an application cannot be written entirely in the Java programming language,

Thorough understanding of java build systems â€“ ant, maven, gradle,
Apache Ant is a software tool for automating software build processes which originated from the Apache Tomcat project in early 2000 as a replacement for the Make build tool of Unix. It is similar to Make, but is implemented using the Java language and requires the Java platform. 
Maven is a build automation tool used primarily for Java projects. Maven can also be used to build and manage projects written in C#, Ruby, Scala, and other languages.
Gradle is a build automation tool for multi-language software development. It controls the development process in the tasks of compilation and packaging to testing, deployment, and publishing. Supported languages include Java, C/C++, and JavaScript.
